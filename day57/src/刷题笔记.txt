题号：174. 地下城游戏
思路：
1、动态规划。这道题是二维的动态规划，对于二维dp问题，如果不能从左上角想到状态转移方程，那么可以考虑从右下角考虑。本道题就是从右下角开始的状态转
移。只需要在右下角勇士还有一滴血即可，因此这就是初始状态，知道了勇士右下角的状态dp[m][n]=1，那么求其上面和左边的dp也就不难了。
例如dp[m][n]=1;arr[m][n]=-5,此时dp[m-1][n]=dp[m][n]-arr[m][n]；但是若arr[m][n]=5，dp[m][n]-arr[m][n]=-4，因为勇士的血量只能是正
的所以此时dp[m-1][n]=1。因此，dp[i][j]代表勇士到达i,j后最少应该剩余的血量
************************************************************************************************************************
题号：83. 删除排序链表中的重复元素
思路：
因为输入的是有序的排序链表，因此可以通过将结点的值与它之后的结点进行比较来确定它是否为重复结点。如果当前节点的值和下一个节点的值是相等的，则将
当前节点下一个节点的下一个节点覆盖当前节点的下一个节点：cur.next = cur.next.next，继续判断是否相等；如果不等，则cur=cur.next，移动到下一个
节点重复上述过程
************************************************************************************************************************
题号：27. 移除元素
思路：
和26题有异曲同工之处。实质是双指针，在原地覆盖时我们不用考虑之后的元素。慢指针i指向当前有效的元素，指针j则对数组进行遍历，如果nums[j]=val，则
将只管将j后移；如果nums[j]!=val，此时将nums[++i]=nums[j]即可